#include <Servo.h>

// 핀 정의 (절대 참조)
const int SERVO_PIN  = 9;   // 조향 서보 PWM 핀
const int ESC_PIN    = 10;  // 주행 ESC PWM 핀

// 서보 및 ESC 펄스 폭 마이크로초 단위
const int SERVO_NEUTRAL_US     = 1500;
const int SERVO_MIN_US         = 1000;
const int SERVO_MAX_US         = 2000;
const int ESC_NEUTRAL_US       = 1500;
const int ESC_MAX_FORWARD_US   = 1600; // 최대 전진 속도 제한
const int ESC_MAX_REVERSE_US   = 1400; // 최대 후진 속도 제한

// P 제어 이득 (micros per error unit)
const float STEERING_KP = 1.0;

Servo steeringServo;
Servo driveESC;
String inputLine;

void setup() {
  Serial.begin(9600);
  steeringServo.attach(SERVO_PIN);
  driveESC.attach(ESC_PIN);

  // 중립 상태 설정
  steeringServo.writeMicroseconds(SERVO_NEUTRAL_US);
  driveESC.writeMicroseconds(ESC_NEUTRAL_US);
  delay(2000);  // ESC 초기화 대기

  Serial.println("🚗 Arduino 주행 모드 시작");
}

void loop() {
  if (Serial.available()) {
    inputLine = Serial.readStringUntil('\n');
    inputLine.trim();

    // 수동 제어 명령
    if (inputLine == "F") {
      driveESC.writeMicroseconds(ESC_MAX_FORWARD_US);
      steeringServo.writeMicroseconds(SERVO_NEUTRAL_US);
      Serial.println("▶ 수동: Forward");
    }
    else if (inputLine == "B") {
      driveESC.writeMicroseconds(ESC_MAX_REVERSE_US);
      steeringServo.writeMicroseconds(SERVO_NEUTRAL_US);
      Serial.println("◀ 수동: Backward");
    }
    else if (inputLine == "L") {
      int steer_us = constrain(SERVO_NEUTRAL_US - 200, SERVO_MIN_US, SERVO_MAX_US);
      steeringServo.writeMicroseconds(steer_us);
      driveESC.writeMicroseconds(ESC_MAX_FORWARD_US);
      Serial.println("◬ 수동: Left");
    }
    else if (inputLine == "R") {
      int steer_us = constrain(SERVO_NEUTRAL_US + 200, SERVO_MIN_US, SERVO_MAX_US);
      steeringServo.writeMicroseconds(steer_us);
      driveESC.writeMicroseconds(ESC_MAX_FORWARD_US);
      Serial.println("◮ 수동: Right");
    }
    else if (inputLine == "S") {
      driveESC.writeMicroseconds(ESC_NEUTRAL_US);
      steeringServo.writeMicroseconds(SERVO_NEUTRAL_US);
      Serial.println("■ 수동: Stop");
    }
    else {
      // 자동 제어: error_x 숫자 수신
      int error_x = inputLine.toInt();
      // P 제어로 조향 값 계산
      int steer_us = SERVO_NEUTRAL_US + int(error_x * STEERING_KP);
      steer_us = constrain(steer_us, SERVO_MIN_US, SERVO_MAX_US);
      steeringServo.writeMicroseconds(steer_us);

      // 자동 주행 시 전진 속도 제한
      driveESC.writeMicroseconds(ESC_MAX_FORWARD_US);
      Serial.print("● 자동: err=");
      Serial.print(error_x);
      Serial.print(" steer_us=");
      Serial.println(steer_us);
    }
  }

  delay(10); // 루프 속도 제한
}
